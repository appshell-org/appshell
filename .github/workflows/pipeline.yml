name: Appshell CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test:ci

      - name: Build
        run: yarn build

  publish:
    needs: build
    if: contains('["refs/heads/main", "refs/heads/develop"]', github.ref)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'yarn'

      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: $GITHUB_REPOSITORY

      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "@appshell:registry=https://registry.npmjs.org/" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Version and tag pre-release
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: npx lerna version --no-push --conventional-prerelease --yes

      - name: Version and tag release
        if: ${{ github.ref == 'refs/heads/main' }}
        run: npx lerna version --no-push --conventional-graduate --yes

      - name: Build
        run: yarn build

      - name: Publish
        run: npx lerna publish --yes from-git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push CI commit
        run: git push --follow-tags
